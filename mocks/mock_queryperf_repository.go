// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/artback/hygh/pkg/queryperf (interfaces: Repository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	queryperf "github.com/artback/hygh/pkg/queryperf"
	gomock "github.com/golang/mock/gomock"
)

// QueryPerfRepository is a mock of Repository interface.
type QueryPerfRepository struct {
	ctrl     *gomock.Controller
	recorder *QueryPerfRepositoryMockRecorder
}

// QueryPerfRepositoryMockRecorder is the mock recorder for QueryPerfRepository.
type QueryPerfRepositoryMockRecorder struct {
	mock *QueryPerfRepository
}

// NewQueryPerfRepository creates a new mock instance.
func NewQueryPerfRepository(ctrl *gomock.Controller) *QueryPerfRepository {
	mock := &QueryPerfRepository{ctrl: ctrl}
	mock.recorder = &QueryPerfRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *QueryPerfRepository) EXPECT() *QueryPerfRepositoryMockRecorder {
	return m.recorder
}

// QueriesByMeanTime mocks base method.
func (m *QueryPerfRepository) QueriesByMeanTime(arg0 context.Context, arg1 queryperf.Options) (*queryperf.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueriesByMeanTime", arg0, arg1)
	ret0, _ := ret[0].(*queryperf.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueriesByMeanTime indicates an expected call of QueriesByMeanTime.
func (mr *QueryPerfRepositoryMockRecorder) QueriesByMeanTime(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueriesByMeanTime", reflect.TypeOf((*QueryPerfRepository)(nil).QueriesByMeanTime), arg0, arg1)
}
